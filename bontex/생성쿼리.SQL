DROP TABLE ACCOUNT_INFO;
CREATE TABLE ACCOUNT_INFO (
	ACCOUNT_SEQ					INT(11) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '거래처 일련번호'
	, ACCOUNT_NAME				VARCHAR(50) NOT NULL COMMENT '거래처명'
	, ACCOUNT_MARK				VARCHAR(50) COMMENT '상호'
	, CORPORATE_NO				VARCHAR(12) NOT NULL COMMENT '사업자등록번호'
	, CORPORATION_NO			VARCHAR(15) COMMENT '법인등록번호'
	, CEO						VARCHAR(50) COMMENT '대표자명'
	, BIZ_TYPE					VARCHAR(50) COMMENT '업태'
	, JOB_TYPE					VARCHAR(50) COMMENT '종목'
	, TEL						VARCHAR(15) COMMENT '연락처'
	, FAX						VARCHAR(15) COMMENT 'FAX'
	, EMAIL						VARCHAR(100) COMMENT 'EMAIL'
	, ZIPCODE					VARCHAR(6) COMMENT '우편번호'
	, ADDR1						VARCHAR(200) COMMENT '주소1'
	, ADDR2						VARCHAR(200) COMMENT '주소2'
	, ACCOUNT_MANAGER			VARCHAR(50) COMMENT '거래처 담당자'
	, ACCOUNT_RANK				VARCHAR(50) COMMENT '직급'
	, ACCOUNT_TEL				VARCHAR(15) COMMENT '연락처'
	, USER_SEQ					INT(11) UNSIGNED COMMENT '담당자 일련번호'
	, NOTE						TEXT COMMENT '비고'
	, ACCOUNT_DIV_CD			VARCHAR(30) COMMENT '거래처 구분코드'
	, ACCOUNT_TYPE_CD			VARCHAR(30) COMMENT '거래처 형태코드'
	, SALES_DIV_CD				VARCHAR(30) COMMENT '매출 구분 코드'
	, PURCHASE_DIV_CD			VARCHAR(50) COMMENT '매입 구분 코드'
	, PROCESSING_CD				VARCHAR(300) COMMENT '가공코드'
	, TAX_YN					CHAR(1) DEFAULT 'Y' COMMENT 'TAX여부'
	, TAX						DECIMAL(7,2) COMMENT 'TAX'
	, FILE_SEQ					INT(11) UNSIGNED COMMENT '첨부파일 일련번호'
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_FILE_INFO FOREIGN KEY( FILE_SEQ ) REFERENCES FILE_INFO( FILE_SEQ)
)ENGINE = InnoDB COMMENT='거래처 정보'
;

DROP TABLE ITEM_INFO;
CREATE TABLE ITEM_INFO (
	ITEM_SEQ					INT(11) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT 'ITEM 일련번호'
	, MIXED_RATE_CD				VARCHAR(30) COMMENT '혼용율코드'
	, IG_WEAVING_CD				VARCHAR(30) COMMENT 'IG제직코드'
	, DENIER_CD					VARCHAR(30) COMMENT 'DENIER코드'
	, DYEING_CD					VARCHAR(30) COMMENT '염색코드'
	, WATER_RPLT_AGENT_CD		VARCHAR(30) COMMENT '발수제코드'
	, POST_PROC_CD1				VARCHAR(30) COMMENT '후가공코드1'
	, POST_PROC_CD2				VARCHAR(30) COMMENT '후가공코드2'
	, POST_PROC_CD3				VARCHAR(30) COMMENT '후가공코드3'
	, AVAILABLE_WIDTH_CD		VARCHAR(30) COMMENT '가용폭코드'
	, ITEM_CODE					VARCHAR(17) NOT NULL COMMENT 'ITEM코드'
	, ITEM_NAME					VARCHAR(100) COMMENT 'ITEM명'
	, ACCOUNT_ITEM_NAME			VARCHAR(2000) COMMENT '거래처 ITEM명'
	, NOTE						VARCHAR(500) COMMENT '비고'
	, YARN_TYPE_WP				VARCHAR(50) COMMENT 'YARN_TYPE 사종(경사)'
	, YARN_TYPE_WT				VARCHAR(50) COMMENT 'YARN_TYPE 사종(위사)'
	, BRIGHTNESS_WP				VARCHAR(50) COMMENT '밝기 사종(경사)'
	, BRIGHTNESS_WT				VARCHAR(50) COMMENT '밝기 사종(위사)'
	, DENIER_WP					VARCHAR(50) COMMENT 'DENIER 사종(경사)'
	, DENIER_WT					VARCHAR(50) COMMENT 'DENIER 사종(위사)'
	, DENSITY_WP				VARCHAR(50) COMMENT 'DENSITY 사종(경사)'
	, DENSITY_WT				VARCHAR(50) COMMENT 'DENSITY 사종(위사)'
	, YARN_WEIGHT_WP			VARCHAR(50) COMMENT 'YARN_WEIGHT 사종(경사)'
	, YARN_WEIGHT_WT			VARCHAR(50) COMMENT 'YARN_WEIGHT 사종(위사)'
	, FINISH_WEIGHT				VARCHAR(50) COMMENT 'FINISH 무게'
	, FINISH_WIDTH				VARCHAR(50) COMMENT 'FINISH 폭'
	, FINISH_WR					VARCHAR(50) COMMENT 'FINISH W/R'
	, FINISH_PU					VARCHAR(50) COMMENT 'FINISH PU'
	, COMPOSITION_WEIGHT		VARCHAR(50) COMMENT '콤포지션 무게'
	, COMPOSITION_WIDTH			VARCHAR(50) COMMENT '콤포지션 폭'
	, COMPOSITION_WR			VARCHAR(50) COMMENT '콤포지션 W/R'
	, COMPOSITION_PU			VARCHAR(50) COMMENT '콤포지션 PU'
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'	
)ENGINE = InnoDB COMMENT='ITEM 정보'
;

DROP TABLE ITEM_COLOR_INFO;
CREATE TABLE ITEM_COLOR_INFO (
	COLOR_SEQ					INT(11) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT 'ITEM 색상 일련번호'
	, ITEM_SEQ					INT(11) UNSIGNED NOT NULL COMMENT 'ITEM 일련번호'
	, VENDOR_ACCOUNT_SEQ		INT(11) UNSIGNED COMMENT '밴더 일련번호'
	, PRC_ACCOUNT_SEQ			INT(11) UNSIGNED COMMENT '가공업체 일련번호'
	, COLOR_CODE				VARCHAR(20) COMMENT '색상코드'
	, COLOR_NAME 				VARCHAR(200) COMMENT '색상'
	, BT		 				VARCHAR(200) COMMENT 'BT'
	, REF_ORD_NO 				VARCHAR(200) COMMENT '참고주문번호'
	, MEMO		 				VARCHAR(300) COMMENT '비고'
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_ITEM_COLOR_INFO FOREIGN KEY( ITEM_SEQ ) REFERENCES ITEM_INFO( ITEM_SEQ)
	, CONSTRAINT FK2_ITEM_COLOR_INFO FOREIGN KEY( VENDOR_ACCOUNT_SEQ ) REFERENCES ACCOUNT_INFO( ACCOUNT_SEQ)
	, CONSTRAINT FK3_ITEM_COLOR_INFO FOREIGN KEY( PRC_ACCOUNT_SEQ ) REFERENCES ACCOUNT_INFO( ACCOUNT_SEQ)
)ENGINE = InnoDB COMMENT='ITEM 색상 정보'
;

DROP TABLE COST_ACCOUNTING_SHEET;
CREATE TABLE COST_ACCOUNTING_SHEET (
	CAS_SEQ						INT(11) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '원가계산서 일련번호'
	, RECEIPT_DATE				CHAR(8) NOT NULL COMMENT '접수일자'
	, DEPARTMENT				VARCHAR(100) COMMENT '부서'
	, MANAGER					VARCHAR(100) COMMENT '담당자'
	, ITEM_SEQ					INT(11) UNSIGNED COMMENT '품목 일련번호'
	, ITEM_NAME					VARCHAR(100) COMMENT 'ITEM명'
	, MONETARY_UNIT				VARCHAR(10) COMMENT '화폐단위(원,달러)'
	, EXCHANGE_RATE				DECIMAL(7,2) COMMENT '환율'
	, MANUFACTURING_COST_NOTE	VARCHAR(500) COMMENT '제조원가 비고'
	, INCIDENTAL_EXPENSE		DECIMAL(12,2) COMMENT '판매 부대비용'
	, INCIDENTAL_EXPENSE_NOTE	VARCHAR(500) COMMENT '판매 부대비용 비고'
	, SELLING_PRICE				DECIMAL(12,2) COMMENT '판매가'
	, MARGINE_PRICE				DECIMAL(12,2) COMMENT '마진가격'
	, MARGINE_RATE				DECIMAL(7,2) COMMENT '마진율'
	, BRAND_ACCOUNT_SEQ			INT(11) UNSIGNED COMMENT '브랜드 일련번호'
	, BRAND_OFFER_PRICE			DECIMAL(12,2) COMMENT '브랜드 제안 매입가격'
	, VENDOR_ACCOUNT_SEQ		INT(11) UNSIGNED COMMENT '벤더 일련번호'
	, VENDOR_OFFER_PRICE		DECIMAL(12,2) COMMENT '벤더 제안 매입가격'
	, MEMO						TEXT COMMENT '기타 주의사항'
	, ACCOUNT_ITEM_NAME			VARCHAR(2000) COMMENT '거래처 ITEM명'
	, YARN_TYPE_WP				VARCHAR(50) COMMENT 'YARN_TYPE 사종(경사)'
	, YARN_TYPE_WT				VARCHAR(50) COMMENT 'YARN_TYPE 사종(위사)'
	, BRIGHTNESS_WP				VARCHAR(50) COMMENT '밝기 사종(경사)'
	, BRIGHTNESS_WT				VARCHAR(50) COMMENT '밝기 사종(위사)'
	, DENIER_WP					VARCHAR(50) COMMENT 'DENIER 사종(경사)'
	, DENIER_WT					VARCHAR(50) COMMENT 'DENIER 사종(위사)'
	, DENSITY_WP				VARCHAR(50) COMMENT 'DENSITY 사종(경사)'
	, DENSITY_WT				VARCHAR(50) COMMENT 'DENSITY 사종(위사)'
	, YARN_WEIGHT_WP			VARCHAR(50) COMMENT 'YARN_WEIGHT 사종(경사)'
	, YARN_WEIGHT_WT			VARCHAR(50) COMMENT 'YARN_WEIGHT 사종(위사)'
	, FINISH_WEIGHT				VARCHAR(50) COMMENT 'FINISH 무게'
	, FINISH_WIDTH				VARCHAR(50) COMMENT 'FINISH 폭'
	, FINISH_WR					VARCHAR(50) COMMENT 'FINISH W/R'
	, FINISH_PU					VARCHAR(50) COMMENT 'FINISH PU'
	, COMPOSITION_WEIGHT		VARCHAR(50) COMMENT '콤포지션 무게'
	, COMPOSITION_WIDTH			VARCHAR(50) COMMENT '콤포지션 폭'
	, COMPOSITION_WR			VARCHAR(50) COMMENT '콤포지션 W/R'
	, COMPOSITION_PU			VARCHAR(50) COMMENT '콤포지션 PU'
	, FINISH_YN					CHAR(1) DEFAULT 'N' COMMENT '완료여부'
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_COST_ACCOUNTING_SHEET FOREIGN KEY( ITEM_SEQ ) REFERENCES ITEM_INFO ( ITEM_SEQ )
	, CONSTRAINT FK2_COST_ACCOUNTING_SHEET FOREIGN KEY( BRAND_ACCOUNT_SEQ ) REFERENCES ACCOUNT_INFO ( ACCOUNT_SEQ )
	, CONSTRAINT FK3_COST_ACCOUNTING_SHEET FOREIGN KEY( VENDOR_ACCOUNT_SEQ ) REFERENCES ACCOUNT_INFO ( ACCOUNT_SEQ )
) ENGINE = InnoDB COMMENT='원가계산서'
;

DROP TABLE ORDER_INFO;
CREATE TABLE ORDER_INFO (
	ORD_SEQ						INT(11) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '주문 일련번호'
	, CAS_SEQ					INT(11) UNSIGNED COMMENT '원가계산서번호'
	, ORD_NO					VARCHAR(12) COMMENT '주문번호'							-- YYMM-1***  담당자번호+SEQ
	, ORDER_CODE				VARCHAR(5) COMMENT '주문번호 생성시 사용되는 코드'
	, BRAND_ACCOUNT_SEQ			INT(11) UNSIGNED COMMENT '브랜드 일련번호'
	, VENDOR_ACCOUNT_SEQ		INT(11) UNSIGNED COMMENT '벤더 일련번호'
	, SALES_DIV_CD				VARCHAR(30) COMMENT '매출구분코드' 
	, PURCHASE_ORDER_NO			VARCHAR(100) COMMENT 'P/O 번호'
	, ITEM_SEQ					INT(11) UNSIGNED NOT NULL COMMENT 'ITEM 일련번호'
	, PROCESSING_CD				VARCHAR(30) COMMENT '가공코드'
	, MONETARY_UNIT				VARCHAR(10) COMMENT '화폐단위(원,달러)'
	, UNIT_PRICE				DECIMAL(7,2) COMMENT '단가'
	, LEAST_UNIT_PRICE			DECIMAL(12,2) COMMENT '탕비'
	, DELIVERY_DATE				CHAR(8) COMMENT '납기일자'
	, UNIT_CD					VARCHAR(30) COMMENT '단위코드'
	, ORD_STATUS_CD				VARCHAR(30) DEFAULT '1' COMMENT '주문상태코드 0:마감, 1:진행중'			-- 등록, 구매요청서, 가공의뢰서, 마감 ??
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_ORDER_INFO FOREIGN KEY( CAS_SEQ ) REFERENCES COST_ACCOUNTING_SHEET ( CAS_SEQ )
	, CONSTRAINT FK2_ORDER_INFO FOREIGN KEY( ITEM_SEQ ) REFERENCES ITEM_INFO ( ITEM_SEQ )
	, CONSTRAINT FK3_ORDER_INFO FOREIGN KEY( BRAND_ACCOUNT_SEQ ) REFERENCES ACCOUNT_INFO ( ACCOUNT_SEQ )
	, CONSTRAINT FK4_ORDER_INFO FOREIGN KEY( VENDOR_ACCOUNT_SEQ ) REFERENCES ACCOUNT_INFO ( ACCOUNT_SEQ )
) ENGINE = InnoDB COMMENT='주문정보'
;

DROP TABLE ORDER_COLOR_INFO;
CREATE TABLE ORDER_COLOR_INFO (
	ORD_SEQ						INT(11) UNSIGNED NOT NULL COMMENT '주문 일련번호'
	, COLOR_SEQ					INT(11) UNSIGNED NOT NULL COMMENT 'ITEM 색상 일련번호'
	, PURCHASE_ORDER_QNT		INT COMMENT 'P/O 수량'
	, NEED_QNT					INT COMMENT '필요수량'
	, WORK_QNT					INT COMMENT '작업수량'
	, NOTE						VARCHAR(500) COMMENT '비고'
	, EXPRICE_YN				CHAR(1) DEFAULT 'N' COMMENT '탕비적용여부'
	, STOCK_YN					CHAR(1) DEFAULT 'N' COMMENT '재고사용여부'
	, FINISH_YN					CHAR(1) DEFAULT 'N' COMMENT '완료여부'
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, PRIMARY KEY(ORD_SEQ, COLOR_SEQ)
	, CONSTRAINT FK1_ORDER_COLOR_INFO FOREIGN KEY( ORD_SEQ ) REFERENCES ORDER_INFO ( ORD_SEQ )
	, CONSTRAINT FK2_ORDER_COLOR_INFO FOREIGN KEY( COLOR_SEQ ) REFERENCES ITEM_COLOR_INFO ( COLOR_SEQ )
) ENGINE = InnoDB COMMENT='주문 색상 정보'
;

DROP TABLE PROCESSING_INFO;
CREATE TABLE PROCESSING_INFO (
	PRC_SEQ					BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '가공일련번호'
	, TARGET_DIV_CD			CHAR(3) NOT NULL COMMENT '대상구분코드'				-- (CAS:원가계산서, ORD:주문정보)
	, TARGET_SEQ			INT(11) UNSIGNED NOT NULL COMMENT '구분대상번호'	-- (원가계산서 일련번호, 주문정보 일련번호)
	, ACCOUNT_SEQ			INT(11) UNSIGNED COMMENT '거래처 일련번호'
	, PURCHASE_DIV_CD		VARCHAR(30) COMMENT '매입 구분 코드'
	, MONETARY_UNIT			VARCHAR(10) COMMENT '화폐단위(원,달러)' 
	, UNIT_PRICE_USD		DECIMAL(7,2) COMMENT '단가($)'
	, UNIT_PRICE_WON		INT COMMENT '단가(원)'
	, LOSS					INT COMMENT '축률'
	, USE_PRICE				DECIMAL(12,2) COMMENT '소요금액'
	, PROCESSING_CD			VARCHAR(30) COMMENT '가공코드'
	, CALC_UNIT_CD			VARCHAR(30) COMMENT '정산단위코드'
	, NOTE					VARCHAR(500) COMMENT '비고'
	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
) ENGINE = InnoDB COMMENT='가공정보'
;

DROP TABLE PROCESSING_QNT;
CREATE TABLE PROCESSING_QNT (
	QNT_SEQ					BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '수량일련번호'
	, ORD_SEQ				INT(11) UNSIGNED NOT NULL COMMENT '주문 일련번호'
	, COLOR_SEQ				INT(11) UNSIGNED COMMENT 'ITEM 색상 일련번호'
	, PRC_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'
	, WORK_QNT				INT COMMENT '작업수량'
	, NOTE					VARCHAR(500) COMMENT '비고'
	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_PROCESSING_QNT FOREIGN KEY (PRC_SEQ) REFERENCES PROCESSING_INFO(PRC_SEQ)
	, CONSTRAINT FK2_PROCESSING_QNT FOREIGN KEY (ORD_SEQ,COLOR_SEQ) REFERENCES ORDER_COLOR_INFO(ORD_SEQ,COLOR_SEQ)
) ENGINE = InnoDB COMMENT='가공 수량정보'
;

DROP TABLE PROCESSING_DLVY;
CREATE TABLE PROCESSING_DLVY(
	DLVY_SEQ				BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '출고일련번호'
	, QNT_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '수량일련번호'
	, DLVY_DATE				CHAR(8) COMMENT '출고일자'
	, QNT					INT COMMENT '수량'
	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, RNPL_YN				CHAR(1) DEFAULT 'N' COMMENT '마감처리여부'
	, CARRY_OVER_YM			CHAR(6) COMMENT '이월년월'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_PROCESSING_DLVY FOREIGN KEY( QNT_SEQ ) REFERENCES PROCESSING_QNT ( QNT_SEQ )
) ENGINE = InnoDB COMMENT='가공 출고정보'
;

DROP TABLE PURCHASE_REQUEST;
CREATE TABLE PURCHASE_REQUEST (
	PREQ_SEQ				BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '구매요청서 일련번호'
	, PRC_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'
	, EMAIL					VARCHAR(50) COMMENT '거래처 담당자 이메일'
	, REFERENCE 			VARCHAR(100) COMMENT '거래처 담당자 + 직급'
	, FAX 					VARCHAR(20) COMMENT '거래처 팩스번호'
	, WRITE_DATE			CHAR(8) COMMENT '일자'
	, ORD_DATE				CHAR(8) COMMENT '발주일자'
	, DLVY_DATE				CHAR(8) COMMENT '납품일자'
	, DLVY_ACCOUNT_SEQ		INT(11) UNSIGNED COMMENT '납품처 일련번호'
	, STANDARD				VARCHAR(50) COMMENT '규격'
	, QNT					INT COMMENT '수량'
	, UNIT_PRICE			DECIMAL(7,2) COMMENT '단가'
	, AMOUNT				DECIMAL(12,2) COMMENT '금액'
	, MEMO					TEXT COMMENT '특이사항'
	, NOTE					TEXT COMMENT '유의사항'
	, REQ_STATUS_CD			VARCHAR(30) COMMENT '요청상태코드'
	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_PURCHASE_REQUEST FOREIGN KEY( PRC_SEQ ) REFERENCES PROCESSING_INFO ( PRC_SEQ )
) ENGINE = InnoDB COMMENT='구매요청서'
;

DROP TABLE PROCESSING_REQUEST;
CREATE TABLE PROCESSING_REQUEST (
	PRC_REQ_SEQ				BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '가공의뢰서 일련번호'
	, PRC_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'
	, EMAIL					VARCHAR(50) COMMENT '거래처 담당자 이메일'
	, REFERENCE 			VARCHAR(100) COMMENT '참조'
	, FAX 					VARCHAR(20) COMMENT '팩스번호'
	, WRITE_DATE			CHAR(8) COMMENT '일자'
	, DLVY_DATE				CHAR(8) COMMENT '납품일자'
	, RECEIPT_DATE			CHAR(8) COMMENT '입고일자'
	, PURCHASE_ACCOUNT_SEQ	INT(11) UNSIGNED COMMENT '구매처 일련번호'
	, ACCOUNT_ITEM_NAME		VARCHAR(100) COMMENT '업체 품명'
	, ORDER_QNT				INT COMMENT 'ORDER량'
	, UNIT_PRICE			DECIMAL(7,2) COMMENT '단가'
	, PIN_TO_PIN			VARCHAR(50) COMMENT 'PIN TO PIN'			-- 1차,2차
	, TOUCH					VARCHAR(100) COMMENT 'TOUCH'				-- 1차,2차
	, WATER_REPELLENCY		VARCHAR(100) COMMENT '발수도'					-- 2차
	, WATER_REPELLENT_AGENT	VARCHAR(100) COMMENT '발수제'					-- 2차
	, GLOSS_COATING			VARCHAR(100) COMMENT '코팅 광택'				-- 2차
	, CUT_LENGTH			VARCHAR(100) COMMENT 'CUT LENGTH'			-- 2차
	, SEND_HIST1			VARCHAR(50) COMMENT '발송내역1'				-- 1차,2차
	, SEND_HIST2			VARCHAR(50) COMMENT '발송내역2'				-- 1차,2차
	, FABRIC_TAILPIECE		VARCHAR(100) COMMENT '말대'					-- 2차
	, SAMPLE				VARCHAR(50) COMMENT '샘플'					-- 1차,2차
	, HEADQUARTERS			VARCHAR(50) COMMENT '본사'					-- 1차,2차
	, SAMP_SEND1			VARCHAR(100) COMMENT '샘플 발송처1'				-- 1차,2차
	, SAMP_SEND2			VARCHAR(100) COMMENT '샘플 발송처2'				-- 1차,2차
	, PACKAGING_CONDITION	VARCHAR(100) COMMENT '출고시 포장상태'			-- 2차
	, DELIVERY				VARCHAR(50) COMMENT '출고처'					-- 1차,2차
	, PHONE_NUMBER			VARCHAR(50) COMMENT '연락처'					-- 1차,2차
	, MANAGER				VARCHAR(50) COMMENT '담당자'					-- 1차,2차
	, DLVY_METHOD			VARCHAR(30) COMMENT '출고방법'					-- 1차,2차
	, MEMO					TEXT COMMENT '주의사항'						-- 1차,2차
	, NOTE					TEXT COMMENT '비고,협조사항'					-- 1차,2차
	, GLUE_SPREAD			VARCHAR(100) COMMENT '도포량'					-- 2차
	, GLOSS					VARCHAR(100) COMMENT '광택'					-- 2차
	, MEMO_TOUCH			VARCHAR(100) COMMENT 'TOUCH'				-- 2차
	, WATER_PRESSURE		VARCHAR(100) COMMENT '내수압'					-- 2차						
	, WIDTH					VARCHAR(100) COMMENT '폭'					-- 2차
	, SHIPPING_MARK			TEXT COMMENT 'SHIPPING MARK'				-- 2차
	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_PROCESSING_REQUEST FOREIGN KEY( PRC_SEQ ) REFERENCES PROCESSING_INFO ( PRC_SEQ )
	, CONSTRAINT FK2_PROCESSING_REQUEST FOREIGN KEY( PURCHASE_ACCOUNT_SEQ ) REFERENCES ACCOUNT_INFO ( ACCOUNT_SEQ )
) ENGINE = InnoDB COMMENT='가공의뢰서'
;

DROP TABLE PROCESSING_REQUEST_DETL;
CREATE TABLE PROCESSING_REQUEST_DETL (
	PRC_REQ_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '가공의뢰서 일련번호'
	, QNT_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '수량일련번호'
	, COLOR_SEQ				INT(11) UNSIGNED COMMENT 'ITEM 색상 일련번호'
	, QNT					INT COMMENT '수량'
	, NOTE					VARCHAR(500) COMMENT '비고'
	, PRIMARY KEY(PRC_REQ_SEQ, QNT_SEQ)
	, CONSTRAINT FK1_PROCESSING_REQUEST_DETL FOREIGN KEY( PRC_REQ_SEQ ) REFERENCES PROCESSING_REQUEST ( PRC_REQ_SEQ )
	, CONSTRAINT FK2_PROCESSING_REQUEST_DETL FOREIGN KEY( QNT_SEQ ) REFERENCES PROCESSING_QNT ( QNT_SEQ )
)ENGINE = InnoDB COMMENT='가공의뢰서 상세'
;

DROP TABLE FACTORY_REQUEST_LETTER;
CREATE TABLE FACTORY_REQUEST_LETTER (
	FRL_SEQ					BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '출고요청서 일련번호'
	, PRC_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'
	, REFERENCE 			VARCHAR(100) COMMENT '참조'
	, MANAGER				VARCHAR(50) COMMENT '담당자'
	, FRL_DATE				CHAR(8) COMMENT '일자'
	, DEPARTURE_DATE		CHAR(8) COMMENT '출고일자'					-- 1,2차
	, ARRIVAL_DATE			CHAR(8) COMMENT '도착일자'					-- 1,2차,최종
	, ARRIVAL_TIME			CHAR(8) COMMENT '도착시간'					-- 최종
	, DESTINATION			VARCHAR(100) COMMENT '도착지'				-- 1,2차,최종
	, ADDR1					VARCHAR(200) COMMENT '주소1'				-- 최종
	, ADDR2					VARCHAR(200) COMMENT '주소2'				-- 최종
 	, DESTINATION_MANAGER	VARCHAR(50) COMMENT '담당자'				-- 1,2차,최종
 	, PHONE_NUMBER			VARCHAR(50) COMMENT '연락처'				-- 1,2차,최종
	, NOTE					TEXT COMMENT '비고'						-- 최종
 	, SHIPPING_MARK			TEXT COMMENT 'SHIPPING MARK'			-- 1,2차,최종
 	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_FACTORY_REQUEST_LETTER FOREIGN KEY( PRC_SEQ ) REFERENCES PROCESSING_INFO ( PRC_SEQ )
) ENGINE = InnoDB COMMENT='출고요청서'
;

DROP TABLE FACTORY_REQUEST_LETTER_DETL;
CREATE TABLE FACTORY_REQUEST_LETTER_DETL (
	FRL_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '출고요청서 일련번호'
	, QNT_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '수량일련번호'
	, COLOR_SEQ				INT(11) UNSIGNED COMMENT 'ITEM 색상 일련번호'
	, QTY					VARCHAR(50) COMMENT '수량'
	, DLVY_DATE				CHAR(8) COMMENT '출고일자'
	, CT_NO					VARCHAR(50) COMMENT 'C/T NO'
	, NOTE					VARCHAR(500) COMMENT '비고, SHIPPING MARK ORER NO'
	, PRIMARY KEY(FRL_SEQ, QNT_SEQ)
	, CONSTRAINT FK1_FACTORY_REQUEST_LETTER_DETL FOREIGN KEY( FRL_SEQ ) REFERENCES FACTORY_REQUEST_LETTER ( FRL_SEQ )
	, CONSTRAINT FK2_FACTORY_REQUEST_LETTER_DETL FOREIGN KEY( QNT_SEQ ) REFERENCES PROCESSING_QNT ( QNT_SEQ )
) ENGINE = InnoDB COMMENT='출고요청서 상세'
;



DROP TABLE ORDER_DRAFT;
CREATE TABLE ORDER_DRAFT (
	ODF_SEQ					BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '발주서 일련번호'
	, PRC_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'
	, ACCOUNT_MANAGER		VARCHAR(50) COMMENT '업체담당자'
	, FRL_DATE				CHAR(8) COMMENT '일자'
	, MANAGER				VARCHAR(50) COMMENT '담당자'
	, WRITE_DATE			CHAR(8) COMMENT '작성일자'
	, DLVY_DATE				CHAR(8) COMMENT '납품일자'
	, DLVY_ACCOUNT_SEQ		INT(11) UNSIGNED COMMENT '납품처 일련번호'
	, ITEM_NAME				VARCHAR(100) COMMENT '품명'
	, ORDER_QNT				INT COMMENT 'ORDER량'
	, UNIT					CHAR(1) COMMENT '단위'
	, UNIT_PRICE			DECIMAL(7,2) COMMENT '단가'
	, MEMO					TEXT COMMENT '주의사항'
	, NOTE					TEXT COMMENT '유의사항'
	, SHIPPING_MARK			TEXT COMMENT 'SHIPPING MARK'
	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_ORDER_DRAFT FOREIGN KEY( PRC_SEQ ) REFERENCES PROCESSING_INFO ( PRC_SEQ )
) ENGINE = InnoDB COMMENT='발주서'
;

DROP TABLE ORDER_DRAFT_DETL;
CREATE TABLE ORDER_DRAFT_DETL (
	ODF_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '발주서 일련번호'
	, QNT_SEQ				BIGINT(20) UNSIGNED NOT NULL COMMENT '수량일련번호'
	, COLOR_SEQ				INT(11) UNSIGNED COMMENT 'ITEM 색상 일련번호'
	, QTY					VARCHAR(50) COMMENT '수량'
	, NOTE					VARCHAR(500) COMMENT '비고'
	, MEMO					VARCHAR(500) COMMENT '비고사항 또는 협조사항'
	, PRIMARY KEY(ODF_SEQ, QNT_SEQ)
	, CONSTRAINT FK1_ORDER_DRAFT_DETL FOREIGN KEY( ODF_SEQ ) REFERENCES ORDER_DRAFT ( ODF_SEQ )
	, CONSTRAINT FK2_ORDER_DRAFT_DETL FOREIGN KEY( QNT_SEQ ) REFERENCES PROCESSING_QNT ( QNT_SEQ )
) ENGINE = InnoDB COMMENT='발주서 상세'
;



---------------------------------------------------------------------------------------------------------------------------------


DROP TABLE RECEIPT_PAYMENT_LEDGER;
CREATE TABLE RECEIPT_PAYMENT_LEDGER (
	BASE_DATE					CHAR(6) NOT NULL  COMMENT '기준년월'
	, QNT_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '수량일련번호'
	, PURCHASE_DIV_CD			VARCHAR(30) COMMENT '매입 구분 코드'
	, REAL_LOSS					INT COMMENT '실제축률'
	, STOCK_QNT					INT COMMENT '재고수량'
	, LAST_MTH_STOCK_QNT		INT COMMENT '전월 재고수량'
	, TOT_USE_QNT				INT COMMENT '총소요수량'
	, TOT_ETC_QNT				INT COMMENT '총기타정리'
	, FINISH_YN					CHAR(1) DEFAULT 'N' COMMENT '완료여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, PRIMARY KEY(BASE_DATE, QNT_SEQ)
	, CONSTRAINT FK1_RECEIPT_PAYMENT_LEDGER FOREIGN KEY( QNT_SEQ ) REFERENCES PROCESSING_QNT ( QNT_SEQ )
) ENGINE = InnoDB COMMENT='수불관리'
;

DROP TABLE RECEIPT_PAYMENT_USE;
CREATE TABLE RECEIPT_PAYMENT_USE (
	BASE_DATE					CHAR(6) NOT NULL  COMMENT '기준년월'
	, QNT_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '수량일련번호'
	, DLVY_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '출고일련번호'
	, USE_QNT					INT COMMENT '소요수량'
	, ETC_QNT					INT COMMENT '기타정리'
	, NOTE						VARCHAR(300) COMMENT '비고'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, PRIMARY KEY(BASE_DATE, QNT_SEQ, DLVY_SEQ)
	, CONSTRAINT FK1_RECEIPT_PAYMENT_USE FOREIGN KEY(QNT_SEQ) REFERENCES PROCESSING_QNT (QNT_SEQ)
	, CONSTRAINT FK2_RECEIPT_PAYMENT_USE FOREIGN KEY(DLVY_SEQ) REFERENCES PROCESSING_DLVY (DLVY_SEQ)
) ENGINE = InnoDB COMMENT='수불소요정보'
;



----------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------
-- 임시

DROP TABLE STOCK_INFO;
CREATE TABLE STOCK_INFO  (
	BASE_DATE					CHAR(6) NOT NULL  COMMENT '기준년월'
	, PRC_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'
	, TOT_STOCK_QNT				INT COMMENT '총재고수량'
	, USE_FINISH_YN				CHAR(1) DEFAULT 'N' COMMENT '사용완료여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, PRIMARY KEY(BASE_DATE, PRC_SEQ)
	, CONSTRAINT FK1_STOCK_INFO FOREIGN KEY (PRC_SEQ) REFERENCES PROCESSING_INFO(PRC_SEQ)
) ENGINE = InnoDB COMMENT='재고정보'
;


DROP TABLE STOCK_DETL_INFO;
CREATE TABLE STOCK_DETL_INFO  (
	BASE_DATE					CHAR(6) NOT NULL  COMMENT '기준년월'
	, PRC_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'
	, QNT_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '수량일련번호'
	, STOCK_QNT					INT COMMENT '재고수량'
	, STOCK_UNIT_PRICE			DECIMAL(7,2) COMMENT '재고단가'
	, UNIT_PRICE_STOCK			DECIMAL(9,2) COMMENT '재고단가'
	, STOCK_MONETARY_UNIT				VARCHAR(10) COMMENT '화폐단위'
	, USE_FINISH_YN				CHAR(1) DEFAULT 'N' COMMENT '사용완료여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, PRIMARY KEY(BASE_DATE, PRC_SEQ, QNT_SEQ)
	, CONSTRAINT FK1_STOCK_DETL_INFO FOREIGN KEY(PRC_SEQ) REFERENCES PROCESSING_INFO(PRC_SEQ)
	, CONSTRAINT FK2_STOCK_DETL_INFO FOREIGN KEY(QNT_SEQ) REFERENCES PROCESSING_QNT(QNT_SEQ)
) ENGINE = InnoDB COMMENT='재고상세정보'
;


DROP TABLE STOCK_USE_INFO;
CREATE TABLE STOCK_USE_INFO  (
	SUI_SEQ						BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '재고사용 일련번호'
	, BASE_DATE					CHAR(6) NOT NULL  COMMENT '기준년월'
	, PRC_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'
	, QNT_SEQ					BIGINT(20) UNSIGNED COMMENT '수량일련번호'
	, USE_QNT					INT COMMENT '사용수량'
	, NOTE						VARCHAR(300) COMMENT '비고'
	, USE_QNT_SEQ				INT(11) UNSIGNED COMMENT '사용 수량일련번호'
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_STOCK_USE_INFO FOREIGN KEY(BASE_DATE, PRC_SEQ) REFERENCES STOCK_INFO(BASE_DATE, PRC_SEQ)
	, CONSTRAINT FK2_STOCK_USE_INFO FOREIGN KEY(QNT_SEQ) REFERENCES PROCESSING_QNT(QNT_SEQ)
	, CONSTRAINT FK3_STOCK_USE_INFO FOREIGN KEY(USE_QNT_SEQ) REFERENCES PROCESSING_QNT(QNT_SEQ)
) ENGINE = InnoDB COMMENT='재고사용정보'
;

----------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------

DROP TABLE PURCHASE_SETTLEMENT_INFO;
CREATE TABLE PURCHASE_SETTLEMENT_INFO (
	PSI_SEQ						BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '매입정산 일련번호'
	, BASE_DATE					CHAR(6) NOT NULL  COMMENT '기준년월'
	, MONTHDAY					CHAR(4) NOT NULL  COMMENT '월일'
	, ORD_SEQ					INT(11) UNSIGNED NOT NULL COMMENT '주문 일련번호'
	, PRC_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'	
	, DIVISION_NO				INT DEFAULT 0 COMMENT '나누기번호'
	, TOT_QNT					INT COMMENT '수량'
	, EXCHANGE_RATE				DECIMAL(7,2) COMMENT '환율'
	, UNIT_CD					VARCHAR(30) COMMENT '단위코드'
	, MONETARY_UNIT				VARCHAR(10) COMMENT '화폐단위'
	, UNIT_PRICE				DECIMAL(7,2) COMMENT '단가'
	, TAX						DECIMAL(7,2) COMMENT 'TAX'
	, PRICE						DECIMAL(12,2) COMMENT '금액'
	, DELIVERY					VARCHAR(50) COMMENT '출고처'
	, NOTE						VARCHAR(500) COMMENT '비고'
	, CARRY_OVER_YM				CHAR(6) COMMENT '이월년월'
	, FINISH_YN					CHAR(1) DEFAULT 'N' COMMENT '완료여부'
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_PURCHASE_SETTLEMENT_INFO FOREIGN KEY (ORD_SEQ) REFERENCES ORDER_INFO (ORD_SEQ)
	, CONSTRAINT FK2_PURCHASE_SETTLEMENT_INFO FOREIGN KEY (PRC_SEQ) REFERENCES PROCESSING_INFO(PRC_SEQ)
)ENGINE = InnoDB COMMENT='매입정산정보'
;

DROP TABLE PURCHASE_SETTLEMENT_UNIT_PRICE;
CREATE TABLE PURCHASE_SETTLEMENT_UNIT_PRICE (
	BASE_DATE					CHAR(6) NOT NULL  COMMENT '기준년월'
	, ORD_SEQ					INT(11) UNSIGNED NOT NULL COMMENT '주문 일련번호'
	, PRC_SEQ					BIGINT(20) UNSIGNED NOT NULL COMMENT '가공일련번호'
	, EXCHANGE_RATE				DECIMAL(7,2) COMMENT '환율'
	, MONETARY_UNIT				VARCHAR(10) COMMENT '화폐단위'
	, UNIT_PRICE				DECIMAL(7,2) COMMENT '단가'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, PRIMARY KEY(BASE_DATE, ORD_SEQ, PRC_SEQ, MONETARY_UNIT)
	, CONSTRAINT FK1_PURCHASE_SETTLEMENT_UNIT_PRICE FOREIGN KEY (ORD_SEQ) REFERENCES ORDER_INFO (ORD_SEQ)
	, CONSTRAINT FK2_PURCHASE_SETTLEMENT_UNIT_PRICE FOREIGN KEY (PRC_SEQ) REFERENCES PROCESSING_INFO(PRC_SEQ)
)ENGINE = InnoDB COMMENT='매입정산단가'
;


DROP TABLE SALES_SETTLEMENT_INFO;
CREATE TABLE SALES_SETTLEMENT_INFO (
	SSI_SEQ						BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '매출정산 일련번호'
	, BASE_DATE					CHAR(6) NOT NULL  COMMENT '기준년월'
	, MONTHDAY					CHAR(4) NOT NULL  COMMENT '월일'
	, EXCHANGE_RATE				DECIMAL(7,2) COMMENT '환율'
	, ORD_SEQ					INT(11) UNSIGNED NOT NULL COMMENT '주문 일련번호'
	, QNT_SEQ					BIGINT(20) UNSIGNED COMMENT '수량일련번호'	
	, DLVY_SEQ					BIGINT(20) UNSIGNED COMMENT '출고일련번호'
	, COLOR_NAME 				VARCHAR(200) COMMENT '색상 OR 탕비'
	, DIVISION_NO				INT DEFAULT 0 COMMENT '나누기번호'
	, TOT_QNT					INT COMMENT '수량'
	, MONETARY_UNIT				VARCHAR(10) COMMENT '화폐단위'
	, UNIT_PRICE				DECIMAL(7,2) COMMENT '단가'
	, PRICE						DECIMAL(12,2) COMMENT '금액'
	, TAX						DECIMAL(7,2) COMMENT 'TAX'
	, NOTE						VARCHAR(500) COMMENT '비고'
	, CARRY_OVER_YM				CHAR(6) COMMENT '이월년월'
	, FINISH_YN					CHAR(1) DEFAULT 'N' COMMENT '완료여부'
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_SALES_SETTLEMENT_INFO FOREIGN KEY (ORD_SEQ) REFERENCES ORDER_INFO(ORD_SEQ)
	, CONSTRAINT FK2_SALES_SETTLEMENT_INFO FOREIGN KEY (DLVY_SEQ) REFERENCES PROCESSING_DLVY(DLVY_SEQ)
)ENGINE = InnoDB COMMENT='매출정산 정보'
;


DROP TABLE ADD_SETTLEMENT_INFO;
CREATE TABLE ADD_SETTLEMENT_INFO (
	ASI_SEQ						BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '추가정산일련번호'
	, ADD_DIV					CHAR(1) NOT NULL COMMENT '추가정산구분(P:매입, S:매출)'
	, BASE_DATE					CHAR(6) NOT NULL COMMENT '기준년월'
	, MONTHDAY					CHAR(4) NOT NULL COMMENT '월일'
	, PRC_SEQ					BIGINT(20) UNSIGNED COMMENT '가공일련번호'
	, ORD_NO					VARCHAR(12) COMMENT '주문번호'
	, ITEM_NAME					VARCHAR(100) COMMENT 'ITEM명'
	, PROC_NAME					VARCHAR(100) COMMENT '업체명'
	, VENDOR_NAME				VARCHAR(100) COMMENT '벤더명'
	, PROCESSING_DIV			VARCHAR(100) COMMENT '가공구분'
	, PURCHASE_DIV				VARCHAR(100) COMMENT '매입구분'
	, MONETARY_UNIT				VARCHAR(10) COMMENT '화폐단위'
	, EXCHANGE_RATE				DECIMAL(7,2) COMMENT '환율'
	, PRICE						INT COMMENT '금액'
	, NOTE						VARCHAR(500) COMMENT '비고'
	, CONTENT					VARCHAR(100) COMMENT '출고처, COLOR'
	, FINISH_YN					CHAR(1) DEFAULT 'N' COMMENT '완료여부'
	, DEL_YN					CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
)ENGINE = InnoDB COMMENT='추가 정산 정보'
;


DROP TABLE SALES_PROFIT_INFO;
CREATE TABLE SALES_PROFIT_INFO (
	SPI_SEQ						BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '매출이익 일련번호'
	, BASE_DATE					CHAR(6) NOT NULL  COMMENT '기준년월'
	, ORD_SEQ					INT(11) UNSIGNED NOT NULL COMMENT '주문 일련번호'
	, USE_QNT_SEQ				BIGINT(20) UNSIGNED COMMENT '사용 수량일련번호'
	, PURCHASE_PRICE			INT COMMENT '매입원가'
	, OTHER_OVERHEAD_COSTS1		INT COMMENT '기타간접비1'
	, OTHER_OVERHEAD_COSTS2		INT COMMENT '기타간접비2'
	, SALARY					INT COMMENT '급여'
	, NOTE						VARCHAR(500) COMMENT '비고'
	, REGR_ID					VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE					DATETIME COMMENT '등록일시'
	, MODR_ID					VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE					DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_SALES_PROFIT_INFO FOREIGN KEY (ORD_SEQ) REFERENCES ORDER_INFO(ORD_SEQ)
	, CONSTRAINT FK2_SALES_PROFIT_INFO FOREIGN KEY (USE_QNT_SEQ) REFERENCES PROCESSING_QNT(QNT_SEQ)
)ENGINE = InnoDB COMMENT='매출이익정보'
;



---------------------------------------------------------------------------------------------------
-- 대기 
DROP TABLE INVOICE_INFO;
CREATE TABLE INVOICE_INFO (
	INVOICE_SEQ				VARCHAR(10) COMMENT '송장 일련번호'
	, RECEIPT_DATE			CHAR(8) NOT NULL COMMENT '접수일자'
	, BRAND_SEQ				VARCHAR(10) COMMENT '브랜드 일련번호'
	, VENDOR_SEQ			VARCHAR(10) COMMENT '벤더 일련번호'
	, ORDER_SEQ				VARCHAR(20) NOT NULL COMMENT '주문일련번호'
	, COMPANY				VARCHAR(100) COMMENT '매입처'
	, ITEM_SEQ				VARCHAR(10) COMMENT '품목'
	, COLOR_CODE			VARCHAR(10) COMMENT '색상코드'
	, COLOR					VARCHAR(10) COMMENT '색상'
	, WORKING_QNT			INT COMMENT '작업수량'
	, UNIT					CHAR(1) COMMENT '단위(Y:yard, M:meter)'
	, REGR_ID				VARCHAR(10) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(10) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
)ENGINE = InnoDB COMMENT='송장정보'
;
---------------------------------------------------------------------------------------------------

DROP TABLE UNIT_PRICE_INFO;
CREATE TABLE UNIT_PRICE_INFO (
	UNP_SEQ					BIGINT(20) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '단가일련번호'
	, ITEM_SEQ				INT(11) UNSIGNED NOT NULL COMMENT 'ITEM 일련번호'
	, ACCOUNT_SEQ			INT(11) UNSIGNED NOT NULL COMMENT '업체 일련번호'
	, PROCESSING_CD			VARCHAR(30) COMMENT '가공코드'
	, MONETARY_UNIT			VARCHAR(10) COMMENT '화폐단위(원,달러)'
	, UNIT_PRICE			DECIMAL(7,2) NOT NULL COMMENT '단가'
	, UNIT_CD				VARCHAR(30) COMMENT '단위코드'
	, CHANGE_UNIT			CHAR(1) DEFAULT 'U' COMMENT '변동구분'
	, CHANGE_UNIT_PRICE		DECIMAL(7,2) COMMENT '변동금액'
	, CHANGE_NOTE			VARCHAR(500) COMMENT '변동사유'
	, LOSS					INT COMMENT '축률'
	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
	, CONSTRAINT FK1_UNIT_PRICE_INFO FOREIGN KEY (ITEM_SEQ) REFERENCES ITEM_INFO(ITEM_SEQ)
	, CONSTRAINT FK2_UNIT_PRICE_INFO FOREIGN KEY (ACCOUNT_SEQ) REFERENCES ACCOUNT_INFO(ACCOUNT_SEQ)
) ENGINE = InnoDB COMMENT='단가 관리'
;

DROP TABLE USER_INFO;
CREATE TABLE USER_INFO (
	USER_SEQ				INT(11) AUTO_INCREMENT NOT NULL COMMENT '일련번호'
	, USER_ID				VARCHAR(20) NOT NULL COMMENT '아이디'
	, USER_NAME				VARCHAR(50) NOT NULL COMMENT '사용자명'
	, ORDER_CODE			VARCHAR(5) COMMENT '주문번호 생성시 사용되는 코드'
	, PHONE					VARCHAR(13) COMMENT '연락처'
	, EMAIL					VARCHAR(100) COMMENT '이메일'
	, DEPT_NAME				VARCHAR(20) COMMENT '부서명'
	, USER_PW				VARCHAR(200) COMMENT '비밀번호'
	, FAIL_CNT				INT(11) COMMENT '로그인실패횟수'
	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
	, PRIMARY KEY(USER_SEQ)
) ENGINE = InnoDB
AUTO_INCREMENT = 1
COMMENT='사용자정보'
;

DROP TABLE MENU_INFO;
CREATE TABLE MENU_INFO  ( 
	MENU_SEQ      			INT(11) AUTO_INCREMENT NOT NULL COMMENT '일련번호'
	, PRNTS_MENU_ID			VARCHAR(20) COMMENT '상위 메뉴아이디'
	, MENU_ID       		VARCHAR(20) NOT NULL COMMENT '메뉴아이디'
	, MENU_NAME     		VARCHAR(50) NOT NULL COMMENT '메뉴명'
	, MENU_DEPTH    		INT(11) NOT NULL COMMENT '메뉴단계'
	, MENU_URL				VARCHAR(100) NOT NULL COMMENT '메뉴URL'
	, DEL_YN				CHAR(1) DEFAULT 'N' COMMENT '삭제여부'
	, REGR_ID       		VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE      		DATETIME COMMENT '등록일시'
	, PRIMARY KEY(MENU_SEQ)
)
ENGINE = InnoDB
AUTO_INCREMENT = 1
COMMENT = '메뉴정보' 
;

DROP TABLE GRANT_INFO;
CREATE TABLE GRANT_INFO  ( 
	GRANT_SEQ      			INT(11) AUTO_INCREMENT NOT NULL COMMENT '일련번호'
	, USER_ID				VARCHAR(20) NOT NULL COMMENT '사용자아이디'
	, MENU_ID       		VARCHAR(20) NOT NULL COMMENT '메뉴아이디'
	, GRANT_TYPE			CHAR(1) DEFAULT 'A' COMMENT '메뉴권한상태 "":ALL, V:VIEW, N:NONE'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, PRIMARY KEY(GRANT_SEQ)
)
ENGINE = InnoDB
AUTO_INCREMENT = 1
COMMENT = '권한정보' 
;

DROP TABLE USE_LOG_INFO;
CREATE TABLE USE_LOG_INFO  ( 
	LOG_SEQ      			INT(11) AUTO_INCREMENT NOT NULL COMMENT '일련번호'
	, USE_URL       		VARCHAR(100) NOT NULL COMMENT '사용URL'
	, USE_TYPE				VARCHAR(10) NOT NULL COMMENT '사용구분 ex:login=로그인,insert=등록,update=수정,delete=삭제'
	, ETC1					VARCHAR(100) COMMENT '부가메모'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, PRIMARY KEY(LOG_SEQ)
)
ENGINE = InnoDB
AUTO_INCREMENT = 1
COMMENT = '사용이력정보' 
;
CREATE INDEX USE_LOG_INFO_REG_DATE USING BTREE 
ON USE_LOG_INFO(REG_DATE)
;

DROP TABLE CODE_INFO;
CREATE TABLE CODE_INFO (
	CODE_SEQ      			INT(11) AUTO_INCREMENT NOT NULL COMMENT '일련번호'
	, GROUP_CODE			VARCHAR(30) NOT NULL COMMENT '그룹코드'
	, BASIC_CODE			VARCHAR(30) NOT NULL COMMENT '코드'
	, CODE_NAME				VARCHAR(60) NOT NULL COMMENT '코드명'
	, CODE_DESC				VARCHAR(1000) COMMENT '코드설명'
	, ETC1					VARCHAR(500) COMMENT 'ETC1'
	, ETC2					VARCHAR(500) COMMENT 'ETC2'
	, ETC3					VARCHAR(500) COMMENT 'ETC3'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
	, MODR_ID				VARCHAR(20) COMMENT '수정자ID'
	, MOD_DATE				DATETIME COMMENT '수정일시'
	, PRIMARY KEY(CODE_SEQ)
)
ENGINE = InnoDB
AUTO_INCREMENT = 1
COMMENT = '공통코드'
;
ALTER TABLE CODE_INFO
ADD CONSTRAINT BASIC_CODE_UNIQUE
UNIQUE (GROUP_CODE, BASIC_CODE)
;


DROP TABLE FILE_INFO;
CREATE TABLE FILE_INFO (
	FILE_SEQ				INT(11) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '일련번호'
	, FILE_NAME				VARCHAR(100) COMMENT '파일명'
	, ORG_FILE_NAME			VARCHAR(100) COMMENT '원본파일명'
	, FILE_PATH				VARCHAR(100) COMMENT '파일경로'
	, REGR_ID				VARCHAR(20) COMMENT '등록자ID'
	, REG_DATE				DATETIME COMMENT '등록일시'
)
ENGINE = InnoDB
AUTO_INCREMENT = 1
COMMENT = '첨부파일정보'


CREATE FUNCTION F_CODE_NAME (p_group_code varchar(30), p_basic_code varchar(30)) RETURNS varchar(60) CHARSET utf8
NOT DETERMINISTIC
CONTAINS SQL
BEGIN
	DECLARE v_code_name varchar(60);
	SELECT
	CODE_NAME INTO v_code_name
	FROM CODE_INFO
	WHERE GROUP_CODE = p_group_code
	AND BASIC_CODE = p_basic_code
    ;
	RETURN v_code_name;
END

CREATE FUNCTION `COUNT_STR` (X VARCHAR(500), DELIM VARCHAR(12)) RETURNS int(11)
NOT DETERMINISTIC
CONTAINS SQL
BEGIN
	DECLARE v_row INT;
	SELECT
	CASE
		WHEN CONVERT((LENGTH(X) - LENGTH(REPLACE(X, DELIM, ''))) / LENGTH(DELIM), UNSIGNED) > 0
		THEN CONVERT((LENGTH(X) - LENGTH(REPLACE(X, DELIM, ''))) / LENGTH(DELIM) + 1, UNSIGNED)
		ELSE CASE WHEN LENGTH(X) > 0 THEN 1 ELSE 0 END
	END AS N_ROW INTO v_row
	FROM DUAL;
	RETURN v_row;
END

CREATE FUNCTION `F_CODE_NAME_ARR` (p_group_code VARCHAR(30), p_string_arr VARCHAR(100)) RETURNS varchar(500) CHARSET utf8
NOT DETERMINISTIC
CONTAINS SQL
BEGIN
    DECLARE v_arr_name VARCHAR(500);
        SELECT group_concat(code_name) INTO v_arr_name
        FROM CODE_INFO A
        WHERE GROUP_CODE = p_group_code
        and BASIC_CODE in 
        (
        SELECT    TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(A.DATA, ',', B.RN), ',', -1)) AS ROW_DATA
        FROM      (SELECT    COUNT_STR(A.DATA, ',')
                               AS DELIMITER_CNT
                            ,A.DATA
                   FROM      (SELECT p_string_arr AS DATA FROM DUAL) A) A
                  INNER JOIN (SELECT    CAST(seq AS INT) as RN FROM seq_1_to_1000) B ON (B.RN <= A.DELIMITER_CNT)
        );
    RETURN v_arr_name;
END

CREATE FUNCTION F_ACCOUNT_NAME (p_account_seq INT(11)) RETURNS varchar(50) CHARSET utf8
NOT DETERMINISTIC
CONTAINS SQL
BEGIN
	DECLARE v_account_name varchar(50);
	SELECT
	ACCOUNT_NAME INTO v_account_name
	FROM ACCOUNT_INFO
	WHERE ACCOUNT_SEQ = p_account_seq;
	RETURN v_account_name;
END

CREATE FUNCTION `F_ITEM_NAME` (p_item_seq INT(11)) RETURNS varchar(50) CHARSET utf8
NOT DETERMINISTIC
CONTAINS SQL
BEGIN
	DECLARE v_item_name varchar(60);
	SELECT
	ITEM_NAME INTO v_item_name
	FROM ITEM_INFO
	WHERE ITEM_SEQ = p_item_seq;
	RETURN v_item_name;
END

CREATE FUNCTION `F_ITEM_CODE` (p_item_seq INT(11)) RETURNS varchar(50) CHARSET utf8
NOT DETERMINISTIC
CONTAINS SQL
BEGIN
	DECLARE v_item_code varchar(60);
	SELECT
	ITEM_CODE INTO v_item_code
	FROM ITEM_INFO
	WHERE ITEM_SEQ = p_item_seq;
	RETURN v_item_code;
END

CREATE FUNCTION F_USER_NAME (p_user_id varchar(20)) RETURNS varchar(50) CHARSET utf8
NOT DETERMINISTIC
CONTAINS SQL
BEGIN
	DECLARE v_user_name varchar(50);
	SELECT
	USER_NAME INTO v_user_name
	FROM USER_INFO
	WHERE USER_ID = p_user_id;
	RETURN v_user_name;
END

-- 혼용율
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('MIXED_RATE_CD', 'N00', 'NYLON', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('MIXED_RATE_CD', 'P00', 'POLY', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('MIXED_RATE_CD', 'NP0', 'NYLON+POLY', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('MIXED_RATE_CD', 'NPS', 'NYLON+POLY+SPAN', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('MIXED_RATE_CD', 'C00', 'COTTON', '', 'system', SYSDATE());

-- IG제직
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('IG_WEAVING_CD', 'K', 'KNIT', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('IG_WEAVING_CD', 'W', 'WOVEN', '', 'system', SYSDATE());

-- DENIER
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '0XX', '~75', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '1XX', '76~150', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '2XX', '151~225', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '3XX', '226~300', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '4XX', '301~450', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '5XX', '451~600', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '6XX', '601~750', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '7XX', '751~900', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '8XX', '901~1050', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DENIER_CD', '9XX', '1051~', '', 'system', SYSDATE());

--염색
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DYEING_CD', 'P1', 'PD', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DYEING_CD', 'P2', 'PH형광', '', 'system', SYSDATE());

-- 발수제
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('WATER_RPLT_AGENT_CD', 'A', 'C8발수제', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('WATER_RPLT_AGENT_CD', 'B', 'C6발수제', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('WATER_RPLT_AGENT_CD', 'C', 'C0루돌프', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('WATER_RPLT_AGENT_CD', 'D', 'C0젤란', '', 'system', SYSDATE());

-- 후가공
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '0', '없음', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '1', 'PU', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '2', 'PRINT', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '3', 'LAMI', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '4', 'EMBO', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '5', '미정', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '6', '미정', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '7', '미정', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '8', '산자기타', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD1', '9', '의류', '', 'system', SYSDATE());

INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '00', '없음', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '01', 'PU', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '02', 'UV', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '03', 'SPU', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '04', 'SILICONE', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '05', 'FOAM', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '06', 'SILVER', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '07', 'WHITE', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '08', 'COLOR PIGMENT', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '09', 'WAX', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '10', 'AM', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '11', 'PEACH', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '12', 'LAMI', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '13', 'LAMI+PU', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '61', 'PVC', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '66', '합포', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD2', '76', '미정', '', 'system', SYSDATE());

INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '00', '없음', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '01', '500mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '02', '600mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '03', '800mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '04', '1000mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '05', '1200mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '06', '1500mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '07', '2000mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '08', '3000mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '09', '5000mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '10', '10000mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '26', '1TIME', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '27', '2TIME', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '28', '3TIME', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '29', '4TIME', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '30', '5TIME', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '31', 'THIN', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '32', 'THICK', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '61', '0.1mm', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('POST_PROC_CD3', '76', '미정', '', 'system', SYSDATE());

-- 가용폭
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('AVAILABLE_WIDTH_CD', 'A', '44"', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('AVAILABLE_WIDTH_CD', 'B', '56"~58"', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('AVAILABLE_WIDTH_CD', 'C', '60"~', '', 'system', SYSDATE());

-- 거래처 구분코드
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('ACCOUNT_DIV_CD', '01', '매출거래처', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('ACCOUNT_DIV_CD', '02', '매입거래처', '', 'system', SYSDATE());

-- 거래처 형태코드
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('ACCOUNT_TYPE_CD', '01', '밴더', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('ACCOUNT_TYPE_CD', '02', '브랜드', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('ACCOUNT_TYPE_CD', '03', '밴더&브랜드', '', 'system', SYSDATE());

-- 매출구분코드
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('SALES_DIV_CD', '1', 'LOCAL', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('SALES_DIV_CD', '2', '직수출', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('SALES_DIV_CD', '3', '내수', '', 'system', SYSDATE());

-- 매입구분코드
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '10', '원사', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '01', '생지', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '02', '염색', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '03', '코팅', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '04', '재공품', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '05', '완제품', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '06', '프린트', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '07', 'LAMI', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '08', '창고', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PURCHASE_DIV_CD', '09', '기타', '', 'system', SYSDATE());

-- 가공코드
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PROCESSING_CD', '01', 'XA', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PROCESSING_CD', '02', 'PU', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PROCESSING_CD', '03', 'TA', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('PROCESSING_CD', '04', 'XX1000', '', 'system', SYSDATE());

-- 단위코드
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('UNIT_CD', 'Y', 'YARD', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('UNIT_CD', 'M', 'METER', '', 'system', SYSDATE());

-- 주문상태코드
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('ORD_STATUS_CD', '01', '임시저장', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('ORD_STATUS_CD', '02', '저장', '', 'system', SYSDATE());

-- 요청상태코드 
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('REQ_STATUS_CD', '01', '저장', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('REQ_STATUS_CD', '02', '출력', '', 'system', SYSDATE());

-- 출고방법
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DLVY_METHOD', '01', '합바', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DLVY_METHOD', '02', '독차', '', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('DLVY_METHOD', '03', '경동화물', '', 'system', SYSDATE());

-- 화폐단위
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('MONETARY_UNIT', 'D', '$', '달러', 'system', SYSDATE());
INSERT INTO CODE_INFO (GROUP_CODE, BASIC_CODE, CODE_NAME, CODE_DESC, REGR_ID, REG_DATE)
VALUES('MONETARY_UNIT', 'W', '￦', '원화', 'system', SYSDATE());
